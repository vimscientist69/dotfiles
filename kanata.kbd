(defcfg
    process-unmapped-keys yes
)

(defvar
   tap-time 200 
   hold-time 200 
   long-hold-time 300 
)

(deflocalkeys-macos
  dnd 251
)

(defsrc
    tab
    ret
    lshift
    m
    spc
)

;; Home row modifiers
(defalias
    meh (multi ctl alt sft)
    tmeh (tap-hold $tap-time $hold-time spc @meh)

    switch-symbol-layer (layer-switch symbol-layer)
    switch-number-layer (layer-switch number-layer)
    switch-fn-layer (layer-switch fn-layer)
    switch-arrow-layer (layer-switch arrow-layer)
    switch-base-layer (layer-switch base)

    a-mod (tap-hold $tap-time $long-hold-time a lctrl)
    o-mod (tap-hold $tap-time $long-hold-time o lalt)
    e-mod (tap-hold $tap-time $hold-time e lmeta)
    u-mod (tap-hold $tap-time $hold-time u lsft)
    h-mod (tap-hold $tap-time $hold-time h rsft)
    t-mod (tap-hold $tap-time $hold-time t rmeta)
    n-mod (tap-hold $tap-time $long-hold-time n ralt)
    s-mod (tap-hold $tap-time $long-hold-time s rctrl)

    a-mod-symbol-layer (tap-hold $tap-time $long-hold-time + lctrl)
    o-mod-symbol-layer (tap-hold $tap-time $long-hold-time [ lalt)
    e-mod-symbol-layer (tap-hold $tap-time $hold-time { lmeta)
    u-mod-symbol-layer (tap-hold $tap-time $hold-time S-9 lsft)
    h-mod-symbol-layer (tap-hold $tap-time $hold-time S-0 rsft)
    t-mod-symbol-layer (tap-hold $tap-time $hold-time } rmeta)
    n-mod-symbol-layer (tap-hold $tap-time $long-hold-time ] ralt)
    s-mod-symbol-layer (tap-hold $tap-time $long-hold-time S-8 rctrl)

    a-mod-number-layer (tap-hold $tap-time $long-hold-time 1 lctrl)
    o-mod-number-layer (tap-hold $tap-time $long-hold-time 2 lalt)
    e-mod-number-layer (tap-hold $tap-time $hold-time 3 lmeta)
    u-mod-number-layer (tap-hold $tap-time $hold-time 4 lsft)
    h-mod-number-layer (tap-hold $tap-time $hold-time 7 rsft)
    t-mod-number-layer (tap-hold $tap-time $hold-time 8 rmeta)
    n-mod-number-layer (tap-hold $tap-time $long-hold-time 9 ralt)
    s-mod-number-layer (tap-hold $tap-time $long-hold-time 0 rctrl)

    a-mod-arrow-layer (tap-hold $tap-time $long-hold-time del lctrl)
    o-mod-arrow-layer (tap-hold $tap-time $long-hold-time pgup lalt)
    e-mod-arrow-layer (tap-hold $tap-time $hold-time down lmeta)
    u-mod-arrow-layer (tap-hold $tap-time $hold-time up lsft)
    h-mod-arrow-layer (tap-hold $tap-time $hold-time left rsft)
    t-mod-arrow-layer (tap-hold $tap-time $hold-time rght rmeta)
    n-mod-arrow-layer (tap-hold $tap-time $long-hold-time pgdn ralt)
    s-mod-arrow-layer (tap-hold $tap-time $long-hold-time ins rctrl)

    a-mod-fn-layer (tap-hold $tap-time $long-hold-time f1 lctrl)
    o-mod-fn-layer (tap-hold $tap-time $long-hold-time f2 lalt)
    e-mod-fn-layer (tap-hold $tap-time $hold-time f3 lmeta)
    u-mod-fn-layer (tap-hold $tap-time $hold-time f4 lsft)
    h-mod-fn-layer (tap-hold $tap-time $hold-time f7 rsft)
    t-mod-fn-layer (tap-hold $tap-time $hold-time f8 rmeta)
    n-mod-fn-layer (tap-hold $tap-time $long-hold-time f9 ralt)
    s-mod-fn-layer (tap-hold $tap-time $long-hold-time f10 rctrl)

    ;; sym layer
    goto_base_on_symlayer_u chord (chord symlayer_switch_layers f)
    goto_base_on_symlayer_h chord (chord symlayer_switch_layers j)
    goto_numbers_on_symlayer_o chord (chord symlayer_switch_layers s)
    goto_numbers_on_symlayer_n chord (chord symlayer_switch_layers l)
    goto_arrows_on_symlayer_a chord (chord symlayer_switch_layers a)
    goto_arrows_on_symlayer_s chord (chord symlayer_switch_layers ;)
    goto_fn_on_symlayer_i chord (chord symlayer_switch_layers g)
    goto_fn_on_symlayer_d chord (chord symlayer_switch_layers h)

    ;; baselayer
    goto_symbols_on_baselayer_e chord (chord baselayer_switch_layers d)
    goto_symbols_on_baselayer_t chord (chord baselayer_switch_layers k)
    goto_numbers_on_baselayer_o chord (chord baselayer_switch_layers s)
    goto_numbers_on_baselayer_n chord (chord baselayer_switch_layers l)
    goto_arrows_on_baselayer_a chord (chord baselayer_switch_layers a)
    goto_arrows_on_baselayer_s chord (chord baselayer_switch_layers ;)
    goto_fn_on_baselayer_i chord (chord baselayer_switch_layers g)
    goto_fn_on_baselayer_d chord (chord baselayer_switch_layers h)

    ;; number layer
    goto_base_on_numlayer_u chord (chord numlayer_switch_layers f)
    goto_base_on_numlayer_h chord (chord numlayer_switch_layers j)
    goto_symbols_on_numlayer_e chord (chord numlayer_switch_layers d)
    goto_symbols_on_numlayer_t chord (chord numlayer_switch_layers k)
    goto_arrows_on_numlayer_a chord (chord numlayer_switch_layers a)
    goto_arrows_on_numlayer_s chord (chord numlayer_switch_layers ;)
    goto_fn_on_numlayer_i chord (chord numlayer_switch_layers g)
    goto_fn_on_numlayer_d chord (chord numlayer_switch_layers h)
)

(defchords numlayer_switch_layers 15
    (f  ) @u-mod-number-layer
    (  j) @h-mod-number-layer
    (f j) @switch-base-layer

    (d  ) @e-mod-number-layer
    (  k) @t-mod-number-layer
    (d k) @switch-symbol-layer

    (a  ) @a-mod-number-layer
    (  ;) @s-mod-number-layer
    (a ;) @switch-arrow-layer

    (g  ) 5
    (  h) 6
    (g h) @switch-fn-layer
)

(defchords baselayer_switch_layers 15
    (d  ) @e-mod
    (  k) @t-mod
    (d k) @switch-symbol-layer

    (s  ) @o-mod
    (  l) @n-mod
    (s l) @switch-number-layer

    (a  ) @a-mod
    (  ;) @s-mod
    (a ;) @switch-arrow-layer

    (g  ) i
    (  h) d
    (g h) @switch-fn-layer
)

(defchords symlayer_switch_layers 15
    (f  ) @u-mod-symbol-layer
    (  j) @h-mod-symbol-layer
    (f j) @switch-base-layer

    (s  ) @o-mod-symbol-layer
    (  l) @n-mod-symbol-layer
    (s l) @switch-number-layer

    (a  ) @a-mod-symbol-layer
    (  ;) @s-mod-symbol-layer
    (a ;) @switch-arrow-layer

    (g  ) S-7
    (  h) =
    (g h) @switch-fn-layer
)

(deflayermap (base)
    q ;
    w ,
    e .
    r p
    t y
    y f
    u g
    i c
    o r
    p l
    [ bspc 
    ] esc
    \ @switch-fn-layer

    caps @switch-symbol-layer
    a @a-mod
    s @o-mod
    d @e-mod
    f @u-mod
    g i
    h d
    j @h-mod
    k @t-mod
    l @n-mod
    ; @s-mod
    ' @switch-number-layer

    z '
    x q
    c j
    v k
    b x
    n b
    , w
    . v
    / z
    rshift @switch-arrow-layer

    __ nop0
)

(deflayermap (symbol-layer)
    w -
    e S-1
    r S-\
    u /
    i S-2
    o S--
    [ bspc 
    ] esc

    \ @switch-fn-layer
    a @a-mod-symbol-layer
    s @o-mod-symbol-layer
    d @e-mod-symbol-layer
    f @u-mod-symbol-layer
    g S-7
    h =
    j @h-mod-symbol-layer
    k @t-mod-symbol-layer
    l @n-mod-symbol-layer
    ; @s-mod-symbol-layer
    ' @switch-number-layer

    c \
    v S-/
    n S-6
    m S-3
    rshift @switch-arrow-layer

    __ nop0
)

(deflayermap (number-layer)
    e S-4
    r S-`
    u `
    i S-5
    [ bspc 
    ] esc
    \ @switch-fn-layer

    caps @switch-symbol-layer
    a @a-mod-number-layer
    s @o-mod-number-layer
    d @e-mod-number-layer
    f @u-mod-number-layer
    g 5
    h 6
    j @h-mod-number-layer
    k @t-mod-number-layer
    l @n-mod-number-layer
    ; @s-mod-number-layer

    rshift @switch-arrow-layer

    __ nop0
)

(deflayermap (arrow-layer)
    [ bspc 
    ] esc
    \ @switch-fn-layer

    caps @switch-symbol-layer
    a @a-mod-arrow-layer
    s @o-mod-arrow-layer
    d @e-mod-arrow-layer
    f @u-mod-arrow-layer
    g home
    h end
    j @h-mod-arrow-layer
    k @t-mod-arrow-layer
    l @n-mod-arrow-layer
    ; @s-mod-arrow-layer
    ' @switch-number-layer

    __ nop0
)

(deflayermap (fn-layer)
    e brup
    r brdown
    t mute
    u volu
    i voldwn
    [ bspc 
    ] esc

    caps @switch-symbol-layer
    a @a-mod-fn-layer
    s @o-mod-fn-layer
    d @e-mod-fn-layer
    f @u-mod-fn-layer
    g f5
    h f6
    j @h-mod-fn-layer
    k @t-mod-fn-layer
    l @n-mod-fn-layer
    ; @s-mod-fn-layer
    ' @switch-number-layer

    c prev
    v pp
    n dnd
    m next
    rshift @switch-arrow-layer

    __ nop0
)
